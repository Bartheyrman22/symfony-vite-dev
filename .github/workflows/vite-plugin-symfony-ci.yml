name: 'vite-plugin-symfony CI'
on:
  push:
    branches: ['main']
  pull_request:

defaults:
  run:
    working-directory: ./src/vite-plugin-symfony

jobs:
  lint:
    name: Eslint and Tsc
    strategy:
      fail-fast: true
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # we need symfony UX dependencies available after composer install
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Get composer cache directory
        # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-output-parameter
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer
        # https://github.com/shivammathur/setup-php/tree/v2/#cache-composer-dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
  
      - name: Install dependencies
        working-directory: .
        run: composer install --no-interaction --no-ansi

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: 'Install JS dependencies'
        run: 'pnpm i --frozen-lockfile'

      - name: 'Eslint'
        run: 'pnpm run lint:check'

      - name: 'Tsc'
        run: 'pnpm run tsc:check'

      - name: 'Test'
        run: 'pnpm run test-run'
